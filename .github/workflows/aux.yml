name: Auxiliary

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  code_review:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Fetch Base Branch
        run: git fetch origin main:main

      - name: Get Changed Files
        id: changed-files
        uses: tj-actions/changed-files@v34

      - name: List All Changed Files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
          done

      - name: Create Diffs Directory
        run: mkdir -p diffs

      - name: Get File Diffs
        run: |
          changed_files="${{ steps.changed-files.outputs.all_changed_files }}"
          echo "Generating diffs for: $changed_files"
          for file in $changed_files; do
            dir_name=$(dirname "$file")
            mkdir -p "diffs/$dir_name"
            if git diff origin/main -- "$file" > "diffs/$file.diff"; then
              echo "Diff for $file generated successfully."
            else
              echo "No diff generated for $file. Skipping."
              rm -f "diffs/$file.diff"
            fi
          done

      - name: Install Octokit
        run: npm install @octokit/core

      - name: Get Latest Commit ID
        id: get_commit
        run: echo "commit_id=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV

      - name: Add Code Suggestions Comments
        env:
          COMMIT_ID: ${{ github.event.pull_request.head.sha }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_EVENT_NUMBER: ${{ github.event.number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          changed_files="${{ steps.changed-files.outputs.all_changed_files }}"
          for file in $changed_files; do
            diff_file="diffs/$file.diff"
            if [ -f "$diff_file" ]; then
              echo "Posting comment for $file"
              
              parsed_values=$(python3 parse_diff.py <<< "$(cat $diff_file)")
              start_line=$(echo "$parsed_values" | awk '{print $1}')
              line=$(echo "$parsed_values" | awk '{print $2}')
              start_side=$(echo "$parsed_values" | awk '{print $3}')
              side=$(echo "$parsed_values" | awk '{print $4}')
              echo $start_line, $line, $start_side, $side
              echo "$(cat $diff_file)"
              node post-comments.js "hello" "${{ env.COMMIT_ID }}" "$file" "$start_line" "$line" "$start_side" "$side"
            fi
          done
