name: Auxiliary

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  code_review:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install Octokit
        run: npm install @octokit/core

      - name: Get Latest Commit ID
        id: get_commit
        run: echo "commit_id=${{ github.sha }}" >> $GITHUB_ENV

      - name: Add Code Suggestions Comments
        env:
          COMMIT_ID: ${{ github.sha }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_EVENT_NUMBER: ${{ github.event.number }}
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        run: |
          node -e "const [owner, repo] = process.env.GITHUB_REPOSITORY.split('/');
                   const { Octokit } = require('@octokit/core');
                   const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });
                   (async () => {
                     try {
                       await octokit.request('POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews', {
                         owner,
                         repo,
                         pull_number: process.env.GITHUB_EVENT_NUMBER,
                         commit_id: process.env.COMMIT_ID,
                         event: 'REQUEST_CHANGES',
                         body: 'hello'
                       });
                       console.log('Review created successfully');
                     } catch (error) {
                       console.error('Error creating review:', error);
                     }
                   })();"
          # node post-comments.js "hello" "$commit_id" "goodbye.py" "1" "RIGHT"
