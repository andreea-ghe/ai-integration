name: GPT Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  code_review:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install Ollama
        run: |
          curl -fsSL https://ollama.com/install.sh | sudo -E sh

      - name: Start Ollama Service
        run: |
          nohup ollama serve &

          sleep 5
          curl -i http://localhost:11434

      - name: Pull Llama3 Model
        run: |
          ollama pull llama3

      - name: Install Python Dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install litellm openai python-dotenv

      - name: Fetch Base Branch
        run: git fetch origin main:main

      - name: Get Changed Files
        id: changed-files
        uses: tj-actions/changed-files@v34

      - name: List All Changed Files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
          done

      - name: Create Diffs Directory
        run: mkdir -p diffs

      - name: Get File Diffs
        run: |
          changed_files="${{ steps.changed-files.outputs.all_changed_files }}"
          echo "Generating diffs for: $changed_files"
          for file in $changed_files; do
            if git diff origin/main -- $file > diffs/$file.diff; then
              echo "Diff for $file generated successfully."
            else
              echo "No diff generated for $file. Skipping."
              rm -f diffs/$file.diff
            fi
          done

      - name: Run Python Script
        run: |
          changed_files="${{ steps.changed-files.outputs.all_changed_files }}"
          python3 chatbot.py "$changed_files"
          cat reviews.txt

      - name: Get Latest Commit ID
        id: get_commit
        run: echo "commit_id=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Add Code Suggestions Comments
        run: |
          commit_id=${{ env.commit_id }}
          file_names=()
          reviews=()
  
          # Read from the file reviews.txt
          while IFS= read -r line; do
            if [[ $line == "FILE: "* ]]; then
                file_names+=("${line#FILE: }")
            elif [[ $line == "REVIEW: "* ]]; then
                review=""
                while IFS= read -r review_line; do
                    [[ $review_line == "ENDREVIEW" ]] && break
                    review+="$review_line"$'\n'
                done
                reviews+=("$review")
        
                # Write the file name and review to aux.txt
                echo "${file_names[-1]}" > aux.txt
                echo -e "$review" >> aux.txt
        
                # Display the content of aux.txt
                cat aux.txt
            fi
          done < reviews.txt
          
          for review in "${reviews[@]}"; do
              escaped_comments=$(echo $review | jq -s -R -r @json)
              curl -s -L \
              -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.MY_GITHUB_TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.number }}/comments \
              -d "{\"body\":$escaped_comments}"
          done
